SET SERVEROUTPUT ON;

create or replace PROCEDURE DROP_TABLES_AND_SYNONYMS IS
V_COUNTER NUMBER := 0;
CURRENT_USER VARCHAR(10);
EX_INCORRECT_USER EXCEPTION;
BEGIN
    SELECT USER INTO CURRENT_USER FROM DUAL;
    IF (CURRENT_USER <> 'NAGPALM') THEN
        RAISE EX_INCORRECT_USER;
    END IF;
    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'RENT' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE RENT CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'DISCOUNT' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE DISCOUNT CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'BIKE' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE BIKE CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'DOCK' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE DOCK CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'TICKETING_QUEUE' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE TICKETING_QUEUE CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'EMPLOYEE' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE EMPLOYEE CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'CUSTOMER' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE CUSTOMER CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'WALLET' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE WALLET CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'MEMBERSHIP' AND TABLESPACE_NAME = 'DATA';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP TABLE MEMBERSHIP CASCADE CONSTRAINTS';       
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'DISCOUNT';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM DISCOUNT';    
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'RENT';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM RENT';    
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'BIKE';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM BIKE';    
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'CUSTOMER';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM CUSTOMER';    
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'EMPLOYEE';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM EMPLOYEE';    
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'WALLET';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM WALLET';    
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'MEMBERSHIP';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM MEMBERSHIP';    
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'TICKETING_QUEUE';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM TICKETING_QUEUE';    
    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_SYNONYMS WHERE OWNER = 'PUBLIC' AND SYNONYM_NAME = 'DOCK';
    IF V_COUNTER > 0 THEN         
        EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM DOCK';    
    END IF;

    COMMIT;

    EXCEPTION
    WHEN EX_INCORRECT_USER THEN
        DBMS_OUTPUT.PUT_LINE('YOU CANNOT DO THIS ACTION. PLEASE CONTACT ADMIN');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
    ROLLBACK;

END;
/

create or replace PROCEDURE CREATETABLES IS
   V_COUNTER NUMBER := 1;
   CURRENT_USER VARCHAR(10);
   EX_INCORRECT_USER EXCEPTION;
BEGIN
    SELECT USER INTO CURRENT_USER FROM DUAL;
    IF (CURRENT_USER <> 'NAGPALM') THEN
        RAISE EX_INCORRECT_USER;
    END IF;
    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'DISCOUNT' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE DISCOUNT(
    COUPON_ID NUMBER(2) PRIMARY KEY,
    COUPON_NAME VARCHAR(32) NOT NULL,
    COUPON_VALUE NUMBER(6,2) NOT NULL
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM DISCOUNT FOR NAGPALM.DISCOUNT';

    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'WALLET' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE WALLET(
    WALLET_ID NUMBER(6) PRIMARY KEY,
    BALANCE NUMBER(6,2) NOT NULL
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM WALLET FOR NAGPALM.WALLET';

    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'DOCK' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE DOCK(
    DOCK_ID NUMBER(3) PRIMARY KEY,
    DOCK_NAME VARCHAR(256) NOT NULL,
    CITY VARCHAR(32) NOT NULL,
    STATE VARCHAR(32) NOT NULL,
    ZIP_CODE VARCHAR(5) NOT NULL,
    LATITUDE NUMBER(8,6) NOT NULL,
    LONGITUDE NUMBER(9,6) NOT NULL
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM DOCK FOR NAGPALM.DOCK';

    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'BIKE' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE BIKE(
    BIKE_ID NUMBER(4) PRIMARY KEY,
    BIKE_MODEL VARCHAR(32) NOT NULL,
    DOCK_ID NUMBER(3) NOT NULL,
    FOREIGN KEY (DOCK_ID) REFERENCES DOCK (DOCK_ID),
    BIKE_STATUS VARCHAR(32) NOT NULL CHECK(BIKE_STATUS = ''AVAILABLE'' OR BIKE_STATUS = ''UNAVAILABLE'')
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM BIKE FOR NAGPALM.BIKE';

    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'MEMBERSHIP' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE MEMBERSHIP(
    MEMBERSHIP_ID NUMBER(1) PRIMARY KEY,
    MEMBERSHIP_TYPE VARCHAR(32) NOT NULL,
    AMOUNT NUMBER(6,2) NOT NULL
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM MEMBERSHIP FOR NAGPALM.MEMBERSHIP';

    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'CUSTOMER' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE CUSTOMER(
    CUSTOMER_ID NUMBER(5) PRIMARY KEY,
    FIRST_NAME VARCHAR(32) NOT NULL,
    LAST_NAME VARCHAR(32) NOT NULL,
    MOBILE_NUMBER NUMBER(10) NOT NULL,
    EMAIL_ID VARCHAR(32) NOT NULL,
    MEMBERSHIP_ID NUMBER(1),
    CONSTRAINT FK_MEMBERSHIP FOREIGN KEY (MEMBERSHIP_ID)
    REFERENCES MEMBERSHIP (MEMBERSHIP_ID),
    WALLET_ID NUMBER(6) NOT NULL,
    CONSTRAINT FK_WALLET FOREIGN KEY (WALLET_ID)
    REFERENCES WALLET (WALLET_ID)
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM CUSTOMER FOR NAGPALM.CUSTOMER';

    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'RENT' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE RENT(
    PAYMENT_ID NUMBER(7) PRIMARY KEY,
    PICKUP_TIME TIMESTAMP NOT NULL,
    DROP_TIME TIMESTAMP NOT NULL,
    BIKE_ID NUMBER(4) NOT NULL,
    CONSTRAINT FK_BIKE FOREIGN KEY (BIKE_ID)
    REFERENCES BIKE (BIKE_ID),
    CUSTOMER_ID NUMBER(5) NOT NULL,
    CONSTRAINT FK_CUSTOMER FOREIGN KEY (CUSTOMER_ID)
    REFERENCES CUSTOMER (CUSTOMER_ID),
    COUPON_ID NUMBER(2),
    CONSTRAINT FK_COUPONID FOREIGN KEY (COUPON_ID)
    REFERENCES DISCOUNT (COUPON_ID)
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM RENT FOR NAGPALM.RENT';

    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'EMPLOYEE' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID NUMBER(8) PRIMARY KEY,
    FIRST_NAME VARCHAR(256) NOT NULL,
    LAST_NAME VARCHAR(256) NOT NULL,
    EMAIL_ID VARCHAR(256) NOT NULL,
    MOBILE_NUMBER NUMBER(10) NOT NULL,
    DOB DATE NOT NULL,
    GENDER VARCHAR(6) NOT NULL CHECK(GENDER = ''MALE'' OR GENDER = ''FEMALE'' OR GENDER = ''OTHER''),
    DESIGNATION VARCHAR(256) NOT NULL,
    REPORTING_MANAGER NUMBER(8)
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM EMPLOYEE FOR NAGPALM.EMPLOYEE';

    END IF;

    SELECT COUNT(*) INTO V_COUNTER FROM ALL_TABLES WHERE TABLE_NAME = 'TICKETING_QUEUE' AND TABLESPACE_NAME = 'DATA';

    IF V_COUNTER = 0 THEN         

    EXECUTE IMMEDIATE '
    CREATE TABLE TICKETING_QUEUE(
    TICKET_ID NUMBER(9) PRIMARY KEY,
    CUSTOMER_ID NUMBER(5) NOT NULL,
    CONSTRAINT FK_CUSTOMERS FOREIGN KEY (CUSTOMER_ID)
    REFERENCES CUSTOMER (CUSTOMER_ID),
    TICKET_AGENT NUMBER(8) NOT NULL,
    CONSTRAINT FK_AGENTS FOREIGN KEY (TICKET_AGENT)
    REFERENCES EMPLOYEE (EMPLOYEE_ID),
    TICKET_URGENCY VARCHAR(32) NOT NULL,
    TICKET_DESC VARCHAR(32) NOT NULL,
    INITIALISED_AT TIMESTAMP NOT NULL,
    ASSIGNED_AT TIMESTAMP NOT NULL,
    CLOSED_AT TIMESTAMP NOT NULL
    )';

    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TICKETING_QUEUE FOR NAGPALM.TICKETING_QUEUE';

    END IF;

    COMMIT;

    EXCEPTION
    WHEN EX_INCORRECT_USER THEN
        DBMS_OUTPUT.PUT_LINE('YOU CANNOT DO THIS ACTION. PLEASE CONTACT ADMIN');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
    ROLLBACK;

END;
/

CREATE OR REPLACE PROCEDURE DELETE_SEQUENCE_USER(OBJNAME VARCHAR2,OBJTYPE VARCHAR2)
IS
    V_COUNTER NUMBER := 0;
    CURRENT_USER VARCHAR(10);
    EX_INCORRECT_USER EXCEPTION;
BEGIN
    SELECT USER INTO CURRENT_USER FROM DUAL;
    IF (CURRENT_USER <> 'NAGPALM') THEN
        RAISE EX_INCORRECT_USER;
    END IF;
    IF OBJTYPE = 'SEQUENCE' THEN
        SELECT COUNT(*) INTO V_COUNTER FROM USER_SEQUENCES WHERE SEQUENCE_NAME = UPPER(OBJNAME);
            IF V_COUNTER > 0 THEN          
                EXECUTE IMMEDIATE 'DROP SEQUENCE ' || OBJNAME;        
            END IF; 
    END IF;
    IF OBJTYPE = 'USER' THEN
        SELECT COUNT(*) INTO V_COUNTER FROM ALL_USERS WHERE USERNAME = UPPER(OBJNAME);
            IF V_COUNTER > 0 THEN          
                EXECUTE IMMEDIATE 'DROP USER ' || OBJNAME;        
            END IF; 
    END IF;
    COMMIT;
    EXCEPTION
    WHEN EX_INCORRECT_USER THEN
        DBMS_OUTPUT.PUT_LINE('YOU CANNOT DO THIS ACTION. PLEASE CONTACT ADMIN');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
    ROLLBACK;
END;
/

EXECUTE DROP_TABLES_AND_SYNONYMS;
EXECUTE CREATETABLES;

EXECUTE DELETE_SEQUENCE_USER('MEMBERSHIP_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE MEMBERSHIP_ID_SEQUENCE
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
EXECUTE DELETE_SEQUENCE_USER('COUPON_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE COUPON_ID_SEQUENCE
    START WITH 10
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
EXECUTE DELETE_SEQUENCE_USER('DOCK_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE DOCK_ID_SEQUENCE
    START WITH 100
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
EXECUTE DELETE_SEQUENCE_USER('BIKE_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE BIKE_ID_SEQUENCE
    START WITH 1000
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
EXECUTE DELETE_SEQUENCE_USER('CUSTOMER_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE CUSTOMER_ID_SEQUENCE
    START WITH 10000
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
EXECUTE DELETE_SEQUENCE_USER('WALLET_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE WALLET_ID_SEQUENCE
    START WITH 100000
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
EXECUTE DELETE_SEQUENCE_USER('PAYMENT_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE PAYMENT_ID_SEQUENCE
    START WITH 1000000
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

EXECUTE DELETE_SEQUENCE_USER('EMPLOYEE_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE EMPLOYEE_ID_SEQUENCE
    START WITH 10000000
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

EXECUTE DELETE_SEQUENCE_USER('TICKET_ID_SEQUENCE','SEQUENCE'); 
CREATE SEQUENCE TICKET_ID_SEQUENCE
    START WITH 100000000
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
  
--INSERTS IN MEMBERSHIP
INSERT INTO MEMBERSHIP (MEMBERSHIP_ID, MEMBERSHIP_TYPE, AMOUNT) VALUES (MEMBERSHIP_ID_SEQUENCE.NEXTVAL,'Weekly',30.55);
INSERT INTO MEMBERSHIP (MEMBERSHIP_ID, MEMBERSHIP_TYPE, AMOUNT) VALUES (MEMBERSHIP_ID_SEQUENCE.NEXTVAL,'Monthly',110.50);
INSERT INTO MEMBERSHIP (MEMBERSHIP_ID, MEMBERSHIP_TYPE, AMOUNT) VALUES (MEMBERSHIP_ID_SEQUENCE.NEXTVAL,'Yearly',1190.00);


--INSERTS IN DISCOUNT
INSERT INTO DISCOUNT (COUPON_ID, COUPON_NAME, COUPON_VALUE) VALUES (COUPON_ID_SEQUENCE.NEXTVAL,'BEBLUE',20);
INSERT INTO DISCOUNT (COUPON_ID, COUPON_NAME, COUPON_VALUE) VALUES (COUPON_ID_SEQUENCE.NEXTVAL,'SAVE10',10);
INSERT INTO DISCOUNT (COUPON_ID, COUPON_NAME, COUPON_VALUE) VALUES (COUPON_ID_SEQUENCE.NEXTVAL,'SAVE05',5);
INSERT INTO DISCOUNT (COUPON_ID, COUPON_NAME, COUPON_VALUE) VALUES (COUPON_ID_SEQUENCE.NEXTVAL,'SAVE03',3);


--INSERTS IN DOCK AND BIKE
INSERT INTO DOCK (DOCK_ID, DOCK_NAME, CITY, STATE, ZIP_CODE, LATITUDE, LONGITUDE) VALUES (DOCK_ID_SEQUENCE.NEXTVAL,'1200 Beacon St','Brookline','Massachusetts','02446',42.3441489,-71.1146736);
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO DOCK (DOCK_ID, DOCK_NAME, CITY, STATE, ZIP_CODE, LATITUDE, LONGITUDE) VALUES (DOCK_ID_SEQUENCE.NEXTVAL,'160 Arsenal','Watertown','Massachusetts','02472',42.364664,-71.1756938);
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO DOCK (DOCK_ID, DOCK_NAME, CITY, STATE, ZIP_CODE, LATITUDE, LONGITUDE) VALUES (DOCK_ID_SEQUENCE.NEXTVAL,'175 N Harvard St','Boston','Massachusetts','02134',42.363796,-71.129164);
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO DOCK (DOCK_ID, DOCK_NAME, CITY, STATE, ZIP_CODE, LATITUDE, LONGITUDE) VALUES (DOCK_ID_SEQUENCE.NEXTVAL,'191 Beacon St','Somerville','Massachusetts','02116',42.3803233,-71.1087861);
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2010',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO DOCK (DOCK_ID, DOCK_NAME, CITY, STATE, ZIP_CODE, LATITUDE, LONGITUDE) VALUES (DOCK_ID_SEQUENCE.NEXTVAL,'2 Hummingbird Lane at Olmsted Green','Boston','Massachusetts','02126',42.28887,-71.095003);
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2015',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'AVAILABLE');
INSERT INTO BIKE (BIKE_ID, BIKE_MODEL, DOCK_ID, BIKE_STATUS) VALUES (BIKE_ID_SEQUENCE.NEXTVAL,'BLU2020',DOCK_ID_SEQUENCE.CURRVAL,'UNAVAILABLE');


--INSERTS INTO EMPLOYEE
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Lillian','Walker','lillian.walker@bbikes.com',1910872484,'27NOV97','FEMALE','Manager',NULL);
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Diane','Robinson','diane.robinson@bbikes.com',1279518760,'25JAN95','FEMALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Benjamin','Robinson','benjamin.robinson@bbikes.com',8451090345,'09Jan97','MALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Patrick','Evans','patrick.evans@bbikes.com',2919637853,'20Feb86','MALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Jack','Russell','jack.russell@bbikes.com',1171612017,'15Nov95','MALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Melissa','Bailey','melissa.bailey@bbikes.com',3791405074,'05Aug97','FEMALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Wayne','Baker','wayne.baker@bbikes.com',9901419828,'20Oct96','MALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Cheryl','Mitchell','cheryl.mitchell@bbikes.com',4507868433,'22Dec85','FEMALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Paula','Wilson','paula.wilson@bbikes.com',9406996076,'06Dec87','FEMALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Joshua','Price','joshua.price@bbikes.com',1948638557,'20Jun97','MALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Theresa','Brown','theresa.brown@bbikes.com',2796003432,'18Jun93','FEMALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Julia','Collins','julia.collins@bbikes.com',7415401255,'25Dec87','FEMALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Thomas','Jenkins','thomas.jenkins@bbikes.com',8154154939,'30May97','MALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Maria','Brown','maria.brown@bbikes.com',8188721494,'07Feb86','FEMALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));
INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL_ID, MOBILE_NUMBER, DOB, GENDER, DESIGNATION, REPORTING_MANAGER) VALUES (EMPLOYEE_ID_SEQUENCE.NEXTVAL,'Brenda','Howard','brenda.howard@bbikes.com',4539315497,'23Feb92','FEMALE','Customer Technician', (SELECT EMPLOYEE_ID FROM EMPLOYEE WHERE DESIGNATION = 'Manager'));

--INSERTS IN WALLET, CUSTOMER AND TICKETING_QUEUE
INSERT INTO WALLET (WALLET_ID, BALANCE) VALUES (WALLET_ID_SEQUENCE.NEXTVAL,500.2);
INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, MOBILE_NUMBER, EMAIL_ID, MEMBERSHIP_ID, WALLET_ID) VALUES (CUSTOMER_ID_SEQUENCE.NEXTVAL,'Lois','Walker',2016268722,'lois.walker@hotmail.com',1,WALLET_ID_SEQUENCE.CURRVAL);
INSERT INTO TICKETING_QUEUE (TICKET_ID, CUSTOMER_ID, TICKET_AGENT, TICKET_URGENCY, TICKET_DESC, INITIALISED_AT, ASSIGNED_AT, CLOSED_AT) VALUES (TICKET_ID_SEQUENCE.NEXTVAL, CUSTOMER_ID_SEQUENCE.CURRVAL,10000000,'Medium','Membership renewal issues',TIMESTAMP '2003-01-01 23:05:07 US/Pacific',TIMESTAMP '2003-01-01 23:06:20 US/Pacific',TIMESTAMP '2003-01-01 23:20:33 US/Pacific');

INSERT INTO WALLET (WALLET_ID, BALANCE) VALUES (WALLET_ID_SEQUENCE.NEXTVAL,400.5);
INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, MOBILE_NUMBER, EMAIL_ID, MEMBERSHIP_ID, WALLET_ID) VALUES (CUSTOMER_ID_SEQUENCE.NEXTVAL,'Brenda','Robinson',2066707016,'brenda.robinson@gmail.com',3,WALLET_ID_SEQUENCE.CURRVAL);
INSERT INTO TICKETING_QUEUE (TICKET_ID, CUSTOMER_ID, TICKET_AGENT, TICKET_URGENCY, TICKET_DESC, INITIALISED_AT, ASSIGNED_AT, CLOSED_AT) VALUES (TICKET_ID_SEQUENCE.NEXTVAL, CUSTOMER_ID_SEQUENCE.CURRVAL,10000005,'High','Rent overcharging issue',TIMESTAMP '2003-01-01 14:05:07 US/Pacific',TIMESTAMP '2003-01-01 14:06:20 US/Pacific',TIMESTAMP '2003-01-01 14:20:33 US/Pacific');

INSERT INTO WALLET (WALLET_ID, BALANCE) VALUES (WALLET_ID_SEQUENCE.NEXTVAL,300.25);
INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, MOBILE_NUMBER, EMAIL_ID, MEMBERSHIP_ID, WALLET_ID) VALUES (CUSTOMER_ID_SEQUENCE.NEXTVAL,'Joe','Robinson',5089040452,'joe.robinson@gmail.com',2,WALLET_ID_SEQUENCE.CURRVAL);
INSERT INTO TICKETING_QUEUE (TICKET_ID, CUSTOMER_ID, TICKET_AGENT, TICKET_URGENCY, TICKET_DESC, INITIALISED_AT, ASSIGNED_AT, CLOSED_AT) VALUES (TICKET_ID_SEQUENCE.NEXTVAL, CUSTOMER_ID_SEQUENCE.CURRVAL,10000012,'Medium','Ride extension issue',TIMESTAMP '2003-01-01 18:05:07 US/Pacific',TIMESTAMP '2003-01-01 18:06:20 US/Pacific',TIMESTAMP '2003-01-01 18:20:33 US/Pacific');

INSERT INTO WALLET (WALLET_ID, BALANCE) VALUES (WALLET_ID_SEQUENCE.NEXTVAL,999.99);
INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, MOBILE_NUMBER, EMAIL_ID, MEMBERSHIP_ID, WALLET_ID) VALUES (CUSTOMER_ID_SEQUENCE.NEXTVAL,'Diane','Evans',3609196987,'diane.evans@yahoo.com',2,WALLET_ID_SEQUENCE.CURRVAL);
INSERT INTO TICKETING_QUEUE (TICKET_ID, CUSTOMER_ID, TICKET_AGENT, TICKET_URGENCY, TICKET_DESC, INITIALISED_AT, ASSIGNED_AT, CLOSED_AT) VALUES (TICKET_ID_SEQUENCE.NEXTVAL, CUSTOMER_ID_SEQUENCE.CURRVAL,10000008,'Medium','Coupon issue',TIMESTAMP '2003-01-01 16:05:07 US/Pacific',TIMESTAMP '2003-01-01 16:06:20 US/Pacific',TIMESTAMP '2003-01-01 16:20:33 US/Pacific');

INSERT INTO WALLET (WALLET_ID, BALANCE) VALUES (WALLET_ID_SEQUENCE.NEXTVAL,50.5);
INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, MOBILE_NUMBER, EMAIL_ID, MEMBERSHIP_ID, WALLET_ID) VALUES (CUSTOMER_ID_SEQUENCE.NEXTVAL,'Benjamin','Russell',6176719370,'benjamin.russell@charter.net',1,WALLET_ID_SEQUENCE.CURRVAL);


--INSERTS IN RENT
INSERT INTO RENT (PAYMENT_ID,CUSTOMER_ID,BIKE_ID,PICKUP_TIME,DROP_TIME,COUPON_ID) VALUES(PAYMENT_ID_SEQUENCE.NEXTVAL,10001,1007,TIMESTAMP '2012-01-01 21:06:20 US/Pacific',TIMESTAMP '2012-01-01 23:06:20 US/Pacific',NULL);
INSERT INTO RENT (PAYMENT_ID,CUSTOMER_ID,BIKE_ID,PICKUP_TIME,DROP_TIME,COUPON_ID) VALUES(PAYMENT_ID_SEQUENCE.NEXTVAL,10003,1006,TIMESTAMP '2022-01-20 16:06:20 US/Pacific',TIMESTAMP '2022-01-20 19:06:20 US/Pacific',10);
INSERT INTO RENT (PAYMENT_ID,CUSTOMER_ID,BIKE_ID,PICKUP_TIME,DROP_TIME,COUPON_ID) VALUES(PAYMENT_ID_SEQUENCE.NEXTVAL,10004,1036,TIMESTAMP '2021-10-27 18:06:20 US/Pacific',TIMESTAMP '2021-10-27 20:10:20 US/Pacific',10);
INSERT INTO RENT (PAYMENT_ID,CUSTOMER_ID,BIKE_ID,PICKUP_TIME,DROP_TIME,COUPON_ID) VALUES(PAYMENT_ID_SEQUENCE.NEXTVAL,10002,1022,TIMESTAMP '2018-12-16 13:06:20 US/Pacific',TIMESTAMP '2018-12-16 14:16:20 US/Pacific',10);


COMMIT;